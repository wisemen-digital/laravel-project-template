image: appwisebe/laravel-docker:8.2

options:
  docker: true

definitions:
  caches:
    composer-cache: /composer/cache
    npm: $HOME/.npm

  services:
    docker:
      memory: 1024
    mysql:
      image: mysql:8.0
      variables:
        MYSQL_DATABASE: test_database
        MYSQL_USER: test_user
        MYSQL_PASSWORD: test_password
        MYSQL_ROOT_PASSWORD: test_password
        MYSQL_ALLOW_EMPTY_PASSWORD: 1

  steps:
    - step: &BuildDev
        caches:
          - composer-cache
        script:
          - composer install
        artifacts:
          - vendor/**

    - step: &Build
        caches:
          - composer-cache
        script:
          - composer install --no-dev
        artifacts:
          - vendor/**

    - step: &Test
        name: Test
        script:
          - for i in {1..30}; do nc -zv 127.0.0.1 3306 && break || sleep 1; done; #wait for mysql to start
          - npm run test-pipeline
        services:
          - mysql


    - step: &Linting
        name: Test
        script:
          - npm run pint-dirty
        services:
          - mysql

    - step: &StaticAnalysis
        name: Test
        script:
          - npm run phpstan
        services:
          - mysql

    - step: &PublishDocs
        name: Publish docs
        services:
          - docker
        script:
          - curl -F file=@resources/docs/openapi.yaml https://docs-diff.development.appwi.se/api/v1/projects/${BITBUCKET_REPO_SLUG} -F environment=${BITBUCKET_DEPLOYMENT_ENVIRONMENT} -F pipeline=${BITBUCKET_BUILD_NUMBER} -F commit=${BITBUCKET_COMMIT} -F author=${BITBUCKET_STEP_TRIGGERER_UUID}


    - step: &Deploy
        script:
          - >-
            rsync -crltDzv . $DEPLOY_URL:www/htdocs --delete-delay
            --exclude=.env
            --exclude=.git
            --exclude=node_modules
            --include='public/index.php'
            --exclude='public/*'
            --exclude='public/storage'
            --exclude=storage/logs
            --exclude=storage/framework/sessions
            --exclude=storage/framework/cache
            --exclude=storage/oauth-private.key
            --exclude=storage/oauth-public.key
          - ssh $DEPLOY_URL sh www/htdocs/post-deploy.sh

pipelines:
  pull-requests:
    '**':
      - step:
          name: Build with dev dependencies
          <<: *BuildDev

      - parallel:
          - step:
              name: Test
              <<: *Test

          - step:
              name: Linting
              <<: *Linting

          - step:
              name: Static Analysis
              <<: *StaticAnalysis


  branches:
    development:
      - stage:
          name: Deploy and Publish docs
          deployment: development
          steps:
            - step:
                name: Build with dev dependencies
                <<: *BuildDev
            - step:
                name: Deploy to development
                <<: *Deploy

            - step:
                <<: *PublishDocs

    test:
      - stage:
          deployment: staging
          steps:
            - step:
                name: Build with dev dependencies
                <<: *BuildDev
            - step:
                name: Deploy to test
                <<: *Deploy

            - step:
                <<: *PublishDocs

    staging:
      - stage:
          deployment: staging
          steps:
            - step:
                name: Build dependencies
                <<: *Build
            - step:
                name: Deploy to staging
                <<: *Deploy

            - step:
                <<: *PublishDocs

    production:
      - stage:
          deployment: production
          steps:
            - step:
                name: Build
                <<: *Build
            - step:
                name: Deploy to production
                <<: *Deploy

            - step:
                <<: *PublishDocs
